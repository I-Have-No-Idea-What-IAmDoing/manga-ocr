"""Main training script for the Manga OCR model.

This script orchestrates the entire training process for the vision-encoder-decoder
model. It handles loading the configuration, initializing the model and datasets,
setting up the Hugging Face `Seq2SeqTrainer`, and launching the training and
evaluation loop. The script is designed to be run from the command line, with
the path to the configuration file as an argument.
"""

from pathlib import Path
from typing import Optional

import torch
import typer
import wandb
from transformers import (
    Seq2SeqTrainer,
    Seq2SeqTrainingArguments,
    default_data_collator,
)

from manga_ocr_dev.env import TRAIN_ROOT
from manga_ocr_dev.training.config import load_config
from manga_ocr_dev.training.dataset import MangaDataset
from manga_ocr_dev.training.get_model import get_model
from manga_ocr_dev.training.metrics import Metrics


def main(
    config_path: Optional[Path] = typer.Option(
        None,
        "--config-path",
        "-c",
        exists=True,
        file_okay=True,
        dir_okay=False,
        readable=True,
        resolve_path=True,
        help="Path to the training configuration file. If not provided, the default `config.yaml` will be used.",
    ),
    run_name: Optional[str] = typer.Option(
        None,
        "--run-name",
        "-n",
        help="A unique name for the training run, used for logging and output directories. If not provided, a name will be generated by `wandb`.",
    ),
):
    """Runs the full training and evaluation pipeline for the Manga OCR model.

    This function initializes the training environment, loads the configuration,
    sets up the model and datasets, and starts the training process using the
    Hugging Face `Seq2SeqTrainer`. It serves as the main entry point for the

    command-line training interface.

    Args:
        config_path (Optional[Path]): Path to the training configuration file.
            If not provided, the default `config.yaml` in the `training`
            directory will be used. This is configured via `typer.Option`.
        run_name (Optional[str]): A unique name for the training run, which is
            used for logging with `wandb` and for naming the output directory.
            If not provided, `wandb` will generate a random name. This is
            configured via `typer.Option`.
    """
    config = load_config(config_path)

    wandb.init(project="manga-ocr", name=run_name, config=config.model_dump())
    if run_name is None:
        run_name = wandb.run.name

    model, processor = get_model(config.model)

    if config.training.torch_compile:
        model = torch.compile(model)

    train_dataset = MangaDataset(
        processor,
        dataset_config=config.dataset,
        max_target_length=config.model.max_len,
    )

    eval_dataset = MangaDataset(
        processor,
        dataset_config=config.dataset,
        max_target_length=config.model.max_len,
    )
    eval_dataset.disable_augmentations()

    metrics = Metrics(processor)

    training_args = Seq2SeqTrainingArguments(
        output_dir=str(Path(TRAIN_ROOT) / run_name),
        run_name=run_name,
        **config.training.model_dump(by_alias=True),
    )

    trainer = Seq2SeqTrainer(
        model=model,
        args=training_args,
        compute_metrics=metrics.compute_metrics,
        train_dataset=train_dataset,
        eval_dataset=eval_dataset,
        data_collator=default_data_collator,
    )
    trainer.train()


if __name__ == "__main__":
    typer.run(main)